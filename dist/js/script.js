function getValue(t){return JSON.parse(JSON.stringify(t))}class Controls{constructor(t){this.app=t,this.dragging=!1,this.listen(),this.downPos={x:0,y:0}}listen(){var t=this;window.addEventListener("mousedown",function(i){t.dragging=!0,t.downPos.x=i.clientX,t.downPos.y=i.clientY}),window.addEventListener("mouseup",function(){t.dragging=!1}),window.addEventListener("mousemove",function(i){if(t.dragging)if(Math.abs(t.downPos.x-i.clientX)>this.app.settings.tileSize/2){t.dragging=!1;var s="left";t.downPos.x<i.clientX&&(s="right"),t.app.grid.switchTile(t.downPos,s)}else if(Math.abs(t.downPos.y-i.clientY)>this.app.settings.tileSize/2){t.dragging=!1;s="up";t.downPos.y<i.clientY&&(s="down"),t.app.grid.switchTile(t.downPos,s)}})}}class Settings{constructor(){this.tileSize=0,this.columns=8,this.rows=10,this.backgroundColour="rgb(0,0,0)",this.restTime=.3}}class TileTypes{constructor(){this.list=[{name:"red",colour:"rgb(217,39,39)"},{name:"orange",colour:"rgb(252,143,18)"},{name:"yellow",colour:"rgb(255,228,51)"},{name:"green",colour:"rgb(111,204,67)"},{name:"blue",colour:"rgb(13,184,181)"}]}}class Tile{constructor(t){this.type=t}}class Grid{constructor(t){this.app=t,this.new(),this.matches=[],this.mode="wait",this.remainingRestTime=this.app.settings.restTime}new(){this.grid=[];for(var t=0;t<this.app.settings.rows;t++){this.grid[t]=[];for(var i=0;i<this.app.settings.columns;i++)this.grid[t][i]=Math.floor(Math.random()*Math.floor(this.app.tileTypes.list.length))}}tick(){if(this.remainingRestTime>0)this.remainingRestTime-=this.app.delta/1e3;else switch(this.mode){case"wait":this.mode="check";break;case"check":this.findMatches(),this.mode="pop",this.remainingRestTime=this.app.settings.restTime;break;case"pop":this.popMatches(),this.mode="drop";break;case"drop":this.dropColumns(),this.full()&&(this.mode="wait",this.remainingRestTime=this.app.settings.restTime)}}switchTile(t,i){var s=this.getTileFromCoords(t.x,t.y);if(void 0!==s){var e=s[0]-1,h=s[1]-1;switch(i){case"up":if(e>0){var a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e-1][h]),this.grid[e-1][h]=a}if(this.findMatches(),0===this.matches.length){a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e-1][h]),this.grid[e-1][h]=a}break;case"down":if(e<this.app.settings.rows-1){a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e+1][h]),this.grid[e+1][h]=a}if(this.findMatches(),0===this.matches.length){a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e+1][h]),this.grid[e+1][h]=a}break;case"left":if(h>0){a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e][h-1]),this.grid[e][h-1]=a}if(this.findMatches(),0===this.matches.length){a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e][h-1]),this.grid[e][h-1]=a}break;case"right":if(h<this.app.settings.columns-1){a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e][h+1]),this.grid[e][h+1]=a}if(this.findMatches(),0===this.matches.length){a=getValue(this.grid[e][h]);this.grid[e][h]=getValue(this.grid[e][h+1]),this.grid[e][h+1]=a}}}}getTileFromCoords(t,i){var s=Math.ceil((i-this.app.canvas.topMargin)/this.app.settings.tileSize),e=Math.ceil((t-this.app.canvas.leftMargin)/this.app.settings.tileSize);if(s>0&&s<=this.app.settings.rows&&e>0&&e<=this.app.settings.columns)return[s,e]}full(){for(let t of this.grid)for(let i of t)if(-1===i)return!1;return!0}dropColumns(){var t=0;for(let s of this.grid){var i=0;for(let e of s)-1===e&&void 0!==this.grid[t-1]&&(this.grid[t][i]=getValue(this.grid[t-1][i]),this.grid[t-1][i]=-1),i++;t++}this.generateRow()}generateRow(){var t=0;for(let i of this.grid[0])-1===i&&(this.grid[0][t]=Math.floor(Math.random()*Math.floor(this.app.tileTypes.list.length))),t++}matchExists(t,i){for(let s of this.matches)if(s==t+","+i)return!0;return!1}popMatches(){for(let i of this.matches){var t=i.split(",");this.grid[parseInt(t[0])][parseInt(t[1])]=-1}this.matches=[]}findMatches(){var t=0;for(let n of this.grid){var i=0;for(let g of n){for(var s=i+1,e=1,h=1;s<=n.length&&g===n[s];)e++,s+=1;for(var a=t+1;a<this.grid.length&&g===this.grid[a][i];)h++,a+=1;if(e>2)for(var r=0;r<e;)this.matchExists(t,i+r)||this.matches.push(t+","+(i+r)),r++;if(h>2)for(r=0;r<h;)this.matchExists(t+r,i)||this.matches.push(t+r+","+i),r++;i++}t++}}}class Canvas{constructor(t){this.app=t,this.c=document.getElementById("canvas"),this.ctx=this.c.getContext("2d"),this.setDimensions(),this.drawBackground()}setDimensions(){this.c.height=this.c.clientHeight,this.c.width=this.c.clientWidth,this.topMargin=0,this.leftMargin=0,this.app.settings.columns>this.app.settings.rows?(this.app.settings.tileSize=this.c.width/this.app.settings.columns,this.c.height<this.app.settings.tileSize*this.app.settings.rows?(this.app.settings.tileSize=this.c.height/this.app.settings.rows,this.leftMargin=(this.c.width-this.app.settings.tileSize*this.app.settings.columns)/2):this.topMargin=(this.c.height-this.app.settings.tileSize*this.app.settings.rows)/2):(this.app.settings.tileSize=this.c.height/this.app.settings.rows,this.c.width<this.app.settings.tileSize*this.app.settings.columns?(this.app.settings.tileSize=this.c.width/this.app.settings.columns,this.topMargin=(this.c.height-this.app.settings.tileSize*this.app.settings.rows)/2):this.leftMargin=(this.c.width-this.app.settings.tileSize*this.app.settings.columns)/2)}draw(){for(var t=0;t<this.app.grid.grid.length;t++)for(var i=0;i<this.app.grid.grid[0].length;i++)if(-1!==this.app.grid.grid[t][i]){var s=this.app.tileTypes.list[this.app.grid.grid[t][i]].colour;this.drawSquare(s,i,t),this.app.grid.matchExists(t,i)&&this.drawMatch(i,t)}}drawBackground(){this.ctx.fillStyle=this.app.settings.backgroundColour,this.ctx.fillRect(0,0,this.c.width,this.c.height)}drawSquare(t,i,s){this.ctx.fillStyle=t,this.ctx.fillRect(Math.floor(this.leftMargin+i*this.app.settings.tileSize),Math.floor(this.topMargin+s*this.app.settings.tileSize),Math.ceil(this.app.settings.tileSize),Math.ceil(this.app.settings.tileSize)),this.ctx.fillStyle="rgba(0,0,0, 0.05)",this.ctx.fillRect(Math.floor(this.leftMargin+i*this.app.settings.tileSize+this.app.settings.tileSize/4),Math.floor(this.topMargin+s*this.app.settings.tileSize+this.app.settings.tileSize/4),Math.ceil(this.app.settings.tileSize/2),Math.ceil(this.app.settings.tileSize/2))}drawMatch(t,i){this.ctx.fillStyle="rgba(255,255,255,0.3)",this.ctx.fillRect(Math.floor(this.leftMargin+t*this.app.settings.tileSize),Math.floor(this.topMargin+i*this.app.settings.tileSize),Math.ceil(this.app.settings.tileSize),Math.ceil(this.app.settings.tileSize))}}class App{constructor(){this.settings=new Settings,this.controls=new Controls(this),this.canvas=new Canvas(this),this.tileTypes=new TileTypes,this.grid=new Grid(this),this.lastTickUpdate=Date.now(),this.delta=0,this.run()}run(){var t=this;this.loop=setInterval(function(){t.tick()},0)}tick(){var t=Date.now();this.delta=t-this.lastTickUpdate,this.lastTickUpdate=t,this.grid.tick(),this.canvas.draw()}}var app=new App;window.onresize=function(t){app.canvas.setDimensions()};